/*
 * This file is part of Baritone.
 *
 * Baritone is free software: you can redistribute it and/or modify
 * it under the terms of the GNU Lesser General Public License as published by
 * the Free Software Foundation, either version 3 of the License, or
 * (at your option) any later version.
 *
 * Baritone is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU Lesser General Public License for more details.
 *
 * You should have received a copy of the GNU Lesser General Public License
 * along with Baritone.  If not, see <https://www.gnu.org/licenses/>.
 */

import baritone.gradle.task.CreateDistTask
import baritone.gradle.task.ProguardTask

plugins {
    id "com.github.johnrengelman.shadow" version "7.0.0"
}

archivesBaseName = archivesBaseName + "-fabric"

minecraft {
    fabric()
    runs.client = {
        jvmArgs.add("-XstartOnFirstThread")
    }
}

configurations {
    common
    shadowCommon // Don't use shadow from the shadow plugin because we don't want IDEA to index this.
    compileClasspath.extendsFrom common
    runtimeClasspath.extendsFrom common
}

dependencies {
    fabric "net.fabricmc:fabric-loader:${project.fabric_version}"

    // because of multiple sourcesets `common project(":")` doesn't work
    for (sourceSet in rootProject.sourceSets) {
        if (sourceSet == rootProject.sourceSets.test) continue
        if (sourceSet == rootProject.sourceSets.schematica_api) continue
        common sourceSet.output
        shadowCommon sourceSet.output
    }
}

processResources {
    inputs.property "version", project.version

    filesMatching("fabric.mod.json") {
        expand "version": project.version
    }
}

shadowJar {
    configurations = [project.configurations.shadowCommon]
    classifier "dev-shadow"
}

remapJar {
    inputFile.set shadowJar.archiveFile
    dependsOn shadowJar
    classifier null
}

jar {
    classifier "dev"
}

components.java {
    withVariantsFromConfiguration(project.configurations.shadowRuntimeElements) {
        skip()
    }
}

publishing {
    publications {
        maven(MavenPublication) {
            artifact "../dist/baritone-api-" + version + ".jar"
        }
    }

    // See https://docs.gradle.org/current/userguide/publishing_maven.html for information on how to set up publishing.
    repositories {
        maven {
            name = "meteor-maven"
            url = "https://maven.meteordev.org/snapshots"

            credentials {
                username = System.getenv("MAVEN_METEOR_ALIAS")
                password = System.getenv("MAVEN_METEOR_TOKEN")
            }

            authentication {
                basic(BasicAuthentication)
            }
        }
    }
}